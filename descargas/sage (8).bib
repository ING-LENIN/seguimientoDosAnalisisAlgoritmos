TY  - JOUR
T1  - Providing Access and Opportunity for Computational Thinking and Computer Science to Support Mathematics for Students With Disabilities
AU  - Bouck, Emily C.
AU  - Yadav, Aman
Y1  - 2020/12/09
PY  - 2022
DA  - 2022/03/01
N1  - doi: 10.1177/0162643420978564
DO  - 10.1177/0162643420978564
T2  - Journal of Special Education Technology
JF  - Journal of Special Education Technology
JO  - J Spec Educ Technol
SP  -151
EP - 160
VL - 37
IS - 1
PB - SAGE Publications Inc
N2 - The ideas of computational thinking (CT) and computer science (CS) are increasingly being integrated into K-12 education. Yet, insufficient attention exists regarding access and exposure of CT and CS for students with disabilities. In this Technology in Action, the authors sought to present an argument—as well as actual activities—for teachers to start to expose and engage students with disabilities in CT and CS. Through the presentation of case studies as well as other non-case situated activities, practical ideas, and steps for integrating CT and CS in mathematics teaching and learning for students with disabilities are presented.
SN - 0162-6434
M3  - doi: 10.1177/0162643420978564
UR  - https://doi-org.crai.referencistas.com/10.1177/0162643420978564
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - The Interplay Between Mathematical and Computational Thinking in Primary School Students’ Mathematical Problem-Solving Within a Programming Environment
AU  - Cui, Zhihao
AU  - Ng, Oi-Lam
Y1  - 2021/01/03
PY  - 2021
DA  - 2021/09/01
N1  - doi: 10.1177/0735633120979930
DO  - 10.1177/0735633120979930
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -988
EP - 1012
VL - 59
IS - 5
PB - SAGE Publications Inc
N2 - In this paper, we explore the challenges experienced by a group of Primary 5 to 6 (age 12–14) students as they engaged in a series of problem-solving tasks through block-based programming. The challenges were analysed according to a taxonomy focusing on the presence of computational thinking (CT) elements in mathematics contexts: preparing problems, programming, create computational abstractions, as well as troubleshooting and debugging. Our results suggested that the challenges experienced by students were compounded by both having to learn the CT-based environment as well as to apply mathematical concepts and problem solving in that environment. Possible explanations for the observed challenges stemming from differences between CT and mathematical thinking are discussed in detail, along with suggestions towards improving the effectiveness of integrating CT into mathematics learning. This study provides evidence-based directions towards enriching mathematics education with computation.
SN - 0735-6331
M3  - doi: 10.1177/0735633120979930
UR  - https://doi-org.crai.referencistas.com/10.1177/0735633120979930
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Understanding the Characteristics of Students’ Behavioral Processes in Solving Computational Thinking Problems Based on the Behavioral Sequences
AU  - Guo, Qing
AU  - Li, Huan
AU  - Zhu, Sha
Y1  - 2024/04/29
PY  - 2024
DA  - 2024/10/01
N1  - doi: 10.1177/07356331241251397
DO  - 10.1177/07356331241251397
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -1475
EP - 1508
VL - 62
IS - 6
PB - SAGE Publications Inc
N2 - Previous research has not adequately explored students’ behavioral processes when addressing computational thinking (CT) problems of varying difficulty, limiting insights into students’ detailed CT development characteristics. This study seeks to fill this gap by employing gamified CT items across multiple difficulty levels to calculate comprehensive behavioral sequence quality indicators. And then, through latent profile analysis, we identified four distinct latent classes of behavioral process. We then examined the in-game performance differences among these classes, uncovering each class’s unique attributes. Class 1 students consistently demonstrated high-quality, efficient behavioral sequences regardless of item difficulty. In contrast, class 2 students applied significant cognitive effort and trial-and-error strategies, achieving acceptable scores despite low behavioral sequence quality. Class 3 students excelled in simpler items but faltered with more complex ones. Class 4 students displayed low motivation for challenging items, often guessing answers quickly. Additionally, we investigated the predictive value of students’ performance in gamified items and their behavioral process classes for their external CT test scores. The study finally elaborated on the theoretical implications for researchers and the practical suggestions for teachers in CT cultivation.
SN - 0735-6331
M3  - doi: 10.1177/07356331241251397
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331241251397
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Combining Building Block Process With Computational Thinking Improves Learning Outcomes of Python Programming With Peer Assessment
AU  - Hsiao, Tsung-Chih
AU  - Chuang, Ya-Hsueh
AU  - Chang, Chien-Yun
AU  - Chen, Tzer-Long
AU  - Zhang, Hong-Bo
AU  - Chang, Jhih-Chung
Y1  - 2023/10/01
PY  - 2023
DA  - 2023/10/01
N1  - doi: 10.1177/21582440231217715
DO  - 10.1177/21582440231217715
T2  - Sage Open
JF  - Sage Open
SP  -21582440231217716
VL - 13
IS - 4
PB - SAGE Publications
N2 - The capability of computer programming language logic is one of the basics of technical education. How to improve students “interest in program logic design and help overcome students” fears of coding has become vital for educators. Cultivating practical talents with information technology application and basic programming development will become one of the important topics in the department of information related science. The objective of this research is to improve the ability of learning basic programming courses by using Zuvio interactive software. Zuvio employs the mathematical logic of computational thinking to analyze problems and enhance learners’ interest in learning programming skills through a graphical interface tool with building blocks. It uses innovative interactive teaching to use peer and self-assessment to study the content of the course. Zuvio improves the design ability of different groups of class learning Python programming. In line with the innovative teaching policy of the schools and the current stage of the learner’s learning model, learning effectiveness can be achieved. The research results were analyzed by midterm and final experimental group scores, and the progress of the experimental group’s scores was examined through descriptive statistics. The average and standard deviation of the assessment were used to analyze the progress of the experimental group students in the programming course. In the classroom, assessment criteria were set up as the basis for peer assessment scoring. After the midterm and final exams, the teacher assessment and peer assessment scores were analyzed for cognitive differences, and possible learning differences were analyzed. The students’ professional ability was examined to see if it met the professional standards required by the course, and whether innovative teaching methods could improve the learning outcomes of learners with different professional backgrounds in Python programming.
SN - 2158-2440
M3  - doi: 10.1177/21582440231217715
UR  - https://doi-org.crai.referencistas.com/10.1177/21582440231217715
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Integrating Computational Thinking Into Scaffolding Learning: An Innovative Approach to Enhance Science, Technology, Engineering, and Mathematics Hands-On Learning
AU  - Lee, Hsin-Yu
AU  - Wu, Ting-Ting
AU  - Lin, Chia-Ju
AU  - Wang, Wei-Sheng
AU  - Huang, Yueh-Min
Y1  - 2023/11/08
PY  - 2024
DA  - 2024/04/01
N1  - doi: 10.1177/07356331231211916
DO  - 10.1177/07356331231211916
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -431
EP - 467
VL - 62
IS - 2
PB - SAGE Publications Inc
N2 - Science, Technology, Engineering, and Mathematics (STEM) education is essential for developing future-ready learners in both secondary and higher education levels. However, as students transition to higher education, many encounter challenges with independent learning and research. This can negatively impact their Higher-Order Thinking Skills (HOTS), engagement, and practical expertise. This study introduces a solution: Computational Thinking Scaffolding (CTS) in the Jupyter Notebook environment, designed to enhance STEM education at the tertiary level. CTS incorporates five phases: Decomposition, Pattern Recognition, Abstraction, Algorithm Design, and Evaluation. Utilizing a quasi-experimental method, we assessed the impact of CTS on the HOTS, engagement, and practical skills of undergraduate and postgraduate students. Our findings hold substantial relevance for university educators, academic advisors, and curriculum designers aiming to enhance students’ HOTS and hands-on capabilities in STEM disciplines. The results validate the effectiveness of CTS in elevating tertiary STEM learning outcomes, and they spotlight the adaptability of the Jupyter Notebook as a valuable tool in higher education. In conclusion, our research underscores the merits of CTS for improving outcomes in higher STEM education and sets a benchmark for future endeavors in this domain.
SN - 0735-6331
M3  - doi: 10.1177/07356331231211916
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331231211916
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Preparing Teachers to Engage Rural Students in Computational Thinking Through Robotics, Game Design, and Culturally Responsive Teaching
AU  - Leonard, Jacqueline
AU  - Mitchell, Monica
AU  - Barnes-Johnson, Joy
AU  - Unertl, Adrienne
AU  - Outka-Hill, Jill
AU  - Robinson, Roland
AU  - Hester-Croff, Carla
Y1  - 2017/09/20
PY  - 2018
DA  - 2018/09/01
N1  - doi: 10.1177/0022487117732317
DO  - 10.1177/0022487117732317
T2  - Journal of Teacher Education
JF  - Journal of Teacher Education
SP  -386
EP - 407
VL - 69
IS - 4
PB - SAGE Publications Inc
N2 - This article examines teacher preparation and teacher change in engineering and computer science education. We examined culturally responsive teaching self-efficacy (CRTSE), culturally responsive teaching outcome expectancy (CRTOE) beliefs, and attitudes toward computational thinking (CT) as teachers participated in one of three treatment groups: robotics only, game design only, or blended robotics/game design. Descriptive data revealed that CRTSE gain scores were higher in the robotics only and blended contexts than in the game design only context. However, CRTOE beliefs were consistent across all treatment groups. In regard to CT attitudes, teachers’ gain scores were higher in the game design only and blended contexts than in the robotics only context. In addition, there were differences by treatment group related to STEM (science, technology, engineering, and mathematics) practices, while cultural artifacts were evident in each learning environment. The results of this study reveal some variability by treatment type and inform future research on equitable practices in engineering and computer science education.
SN - 0022-4871
M3  - doi: 10.1177/0022487117732317
UR  - https://doi-org.crai.referencistas.com/10.1177/0022487117732317
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Transitioning From Introductory to Professional Programming in Secondary Education: Comparing Learners’ Computational Thinking Skills, Behaviors, and Attitudes
AU  - Sun, Dan
AU  - Zhu, Chengcong
AU  - Xu, Fan
AU  - Li, Yan
AU  - Ouyang, Fan
AU  - Cheng, Miaoting
Y1  - 2023/10/03
PY  - 2024
DA  - 2024/06/01
N1  - doi: 10.1177/07356331231204653
DO  - 10.1177/07356331231204653
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -647
EP - 674
VL - 62
IS - 3
PB - SAGE Publications Inc
N2 - Although previous research has provided some insights into the effects of block-based and text-based programming modalities, there is a dearth of a detailed, multi-dimensional analysis of the transition process from different introductory programming modalities to professional programming learning. This study employed a quasi-experimental design to address this gap, involving 64 secondary school students in two groups. For the beginning five weeks, the first group used an introductory block-based programming environment, while the second group used an introductory text-based programming environment. Then, both groups transitioned to professional text-based programming for the subsequent eight weeks. The results showed that participants who transitioned from introductory text-based programming to professional text-based programming (1) significantly outperformed in computational thinking skills; (2) had more code-writing and debugging behaviors and fewer irrelevant behaviors, and (3) had more interactions with the instructor. No significant differences were observed between the two groups regarding enjoyment, confidence, and interest in programming. Drawing on these findings, this study proposes pedagogical implications that could facilitate the adoption of programming modalities within the broader context of STEM education.
SN - 0735-6331
M3  - doi: 10.1177/07356331231204653
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331231204653
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Effects of Gamified Python Programming on Primary School Students’ Computational Thinking Skills: A Differential Analysis of Gender
AU  - Sun, Lihui
AU  - Liu, Junjie
Y1  - 2023/12/29
PY  - 2024
DA  - 2024/06/01
N1  - doi: 10.1177/07356331231225269
DO  - 10.1177/07356331231225269
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -846
EP - 874
VL - 62
IS - 3
PB - SAGE Publications Inc
N2 - Computational thinking (CT), as a new future-oriented literacy, has gained attention at the basic education level. Graphical programming is the common way to develop CT in primary students, but this drag-and-drop programming may weaken students’ understanding of programming’s abstract concepts and code logic. Text-based programming approaches can solve the problems faced by graphical programming, but few studies have explored the impact of text-based programming on CT. Therefore, we conducted a quasi-experimental study with 98 6th graders to explore the impact of gamified Python programming on CT. The findings showed that CT skills, as well as abstraction and decomposition, pattern recognition and evaluation in CT sub-skills, were significantly higher with students in the experimental group than in the control group. Furthermore, we found that gamified Python programming enabled boys and girls to reach the same level of CT skills. However, in terms of CT sub-skills, we found that gamified Python programming was more beneficial to the development of pattern recognition and evaluation skills for boys and abstraction and decomposition skills for girls. This demonstrated the effectiveness of gamified Python programming to improve primary students’ CT skills while clarifying the impact of gender and enriching research in the field of text-based programming.
SN - 0735-6331
M3  - doi: 10.1177/07356331231225269
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331231225269
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Integrating Artificial Intelligence and Computational Thinking in Educational Contexts: A Systematic Review of Instructional Design and Student Learning Outcomes
AU  - Weng, Xiaojing
AU  - Ye, Huiyan
AU  - Dai, Yun
AU  - Ng, Oi-lam
Y1  - 2024/05/30
PY  - 2024
DA  - 2024/10/01
N1  - doi: 10.1177/07356331241248686
DO  - 10.1177/07356331241248686
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -1640
EP - 1670
VL - 62
IS - 6
PB - SAGE Publications Inc
N2 - A growing body of research is focusing on integrating artificial intelligence (AI) and computational thinking (CT) to enhance student learning outcomes. Many researchers have designed instructional activities to achieve various learning goals within this field. Despite the prevalence of studies focusing on instructional design and student learning outcomes, how instructional efforts result in the integration of AI and CT in students’ learning processes remains unclear. To address this research gap, we conducted a systematic literature review of empirical studies that have integrated AI and CT for student development. We collected 18 papers from four prominent research databases in the fields of education and AI technology: Web of Science, Scopus, IEEE, and ACM. We coded the collected studies, highlighting the students’ learning processes in terms of research methodology and context, learning tools and instructional design, student learning outcomes, and the interaction between AI and CT. The integration of AI and CT occurs in two ways: the integration of disciplinary knowledge and leveraging AI tools to learn CT. Specifically, we discovered that AI- and CT-related tools, projects, and problems facilitated student-centered instructional designs, resulting in productive AI and CT learning outcomes.
SN - 0735-6331
M3  - doi: 10.1177/07356331241248686
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331241248686
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Coding With Robots or Tablets? Effects of Technology-Enhanced Embodied Learning on Preschoolers’ Computational Thinking and Social-Emotional Competence
AU  - Yang, Weipeng
Y1  - 2024/01/03
PY  - 2024
DA  - 2024/07/01
N1  - doi: 10.1177/07356331241226459
DO  - 10.1177/07356331241226459
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -938
EP - 960
VL - 62
IS - 4
PB - SAGE Publications Inc
N2 - Computational Thinking (CT) is essential for developing creativity, problem-solving, and digital competence in the 21st century. Coding tools like robotic toys and tablet apps have become popular in early childhood education to support CT development, but there is a debate on which tool is more effective. Little evidence exists on the effect of coding on children’s Social-Emotional Competence (SEC), which is crucial for lifelong development and extends beyond cognitive development. This experimental study aimed to compare the effectiveness of two 9-week programs on promoting 73 preschool children’s CT and SEC, one using coding robots and the other using coding apps. The results showed that children who participated in the Coding Robot Program had higher CT scores than those in the Coding App Program, after controlling for age, gender, family socioeconomic status, and baseline CT scores. While the SEC scores showed no substantial disparities between the groups, it was revealed that the initial performance levels moderated the intervention effects on emotional regulation and overall SEC. This suggests that the Coding Robot Program could be especially advantageous for a subset of children who initially have difficulties with emotional regulation and social skills. Implications of this study are presented for research and practice.
SN - 0735-6331
M3  - doi: 10.1177/07356331241226459
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331241226459
Y2  - 2025/03/05
ER  - 

