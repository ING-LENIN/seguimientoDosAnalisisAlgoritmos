TY  - JOUR
T1  - Effects of Using Alice and Scratch in an Introductory Programming Course for Corrective Instruction
AU  - Chang, Chih-Kai
Y1  - 2014/09/01
PY  - 2014a
DA  - 2014/09/01
N1  - doi: 10.2190/EC.51.2.c
DO  - 10.2190/EC.51.2.c
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -185
EP - 204
VL - 51
IS - 2
PB - SAGE Publications Inc
N2 - Scratch, a visual programming language, was used in many studies in computer science education. Most of them reported positive results by integrating Scratch into K-12 computer courses. However, the object-oriented concept, one of the important computational thinking skills, is not represented well in Scratch. Alice, another visual programming language, seems to have better illustration of the object-oriented concept for programming novices. To demonstrate effects of Alice and Scratch, we compared students’ responses to both visual programming languages, especially for students with low performances, in an introductory programming course. The relationships among learning engagement, learning anxiety, and learning playfulness were explored. The results could be referred to by computer science instructors to select proper visual programming language for corrective instruction.
SN - 0735-6331
M3  - doi: 10.2190/EC.51.2.c
UR  - https://doi-org.crai.referencistas.com/10.2190/EC.51.2.c
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Effects of Using Alice and Scratch in an Introductory Programming Course for Corrective Instruction
AU  - Chang, Chih-Kai
Y1  - 2014/09/01
PY  - 2014b
DA  - 2014/09/01
N1  - doi: 10.2190/EC.51.2.c
DO  - 10.2190/EC.51.2.c
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -185
EP - 204
VL - 51
IS - 2
PB - SAGE Publications Inc
N2 - Scratch, a visual programming language, was used in many studies in computer science education. Most of them reported positive results by integrating Scratch into K-12 computer courses. However, the object-oriented concept, one of the important computational thinking skills, is not represented well in Scratch. Alice, another visual programming language, seems to have better illustration of the object-oriented concept for programming novices. To demonstrate effects of Alice and Scratch, we compared students’ responses to both visual programming languages, especially for students with low performances, in an introductory programming course. The relationships among learning engagement, learning anxiety, and learning playfulness were explored. The results could be referred to by computer science instructors to select proper visual programming language for corrective instruction.
SN - 0735-6331
M3  - doi: 10.2190/EC.51.2.c
UR  - https://doi-org.crai.referencistas.com/10.2190/EC.51.2.c
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Preparing the Future STEM Workforce for Diverse Environments
AU  - Daily, Shaundra Bryant
AU  - Eugene, Wanda
Y1  - 1994/09/01
PY  - 2013
DA  - 1994/09/01
N1  - doi: 10.1111/j.1467-9280.1994.tb00625.x
DO  - 10.1111/j.1467-9280.1994.tb00625.x
T2  - Psychological Science
JF  - Psychological Science
JO  - Psychol Sci
SP  -275
EP - 279
VL - 48
IS - 5
PB - SAGE Publications Inc
N2 - Traditional theories of cognitive development predict that children progress from intuitive to computational thinking, whereas fuzzy-trace theory makes the opposite prediction To evaluate these alternatives, framing problems were administered to preschoolers, second graders, and fifth graders Consistent with fuzzy-trace theory, results indicated (a) that younger children focused on quantitative differences between outcomes and did not exhibit framing effects (risk avoidance for gains, risk seeking for losses) and (b) that older children assimilated these quantitative differences and displayed framing effects
SN - 0956-7976
M3  - doi: 10.1111/j.1467-9280.1994.tb00625.x
UR  - https://doi-org.crai.referencistas.com/10.1111/j.1467-9280.1994.tb00625.x
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Tools and Techniques for Teaching Computer Programming: A Review
AU  - Kanika
AU  - Chakraverty, Shampa
AU  - Chakraborty, Pinaki
Y1  - 2020/05/27
PY  - 2020
DA  - 2020/12/01
N1  - doi: 10.1177/0047239520926971
DO  - 10.1177/0047239520926971
T2  - Journal of Educational Technology Systems
JF  - Journal of Educational Technology Systems
SP  -170
EP - 198
VL - 49
IS - 2
PB - SAGE Publications Inc
N2 - Courses on computer programming are included in the curricula of almost all engineering disciplines. We surveyed the research literature and identified the techniques that are commonly used by instructors for teaching these courses. We observed that visual programming and game-based learning can enhance computational thinking and problem-solving skills in students and may be used to introduce them to programming. Robot programming may be used to attract students to programming, but the success of this technique is subjected to the availability of robots. Pair and collaborative programming allows students to learn from one another and write efficient programs. Assessment systems help instructors in evaluating programs written by students and provide them with timely feedback. Furthermore, an analysis of citations showed that Scratch is the most researched tool for teaching programming. We discuss how these techniques may be used to teach introductory courses, advanced courses, and massive open online courses on programming.
SN - 0047-2395
M3  - doi: 10.1177/0047239520926971
UR  - https://doi-org.crai.referencistas.com/10.1177/0047239520926971
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Fuzzy-Trace Theory and Framing Effects in Children’s Risky Decision Making
AU  - Reyna, Valerie F.
AU  - Ellis, Susan C.
Y1  - 1994/09/01
PY  - 1994
DA  - 1994/09/01
N1  - doi: 10.1111/j.1467-9280.1994.tb00625.x
DO  - 10.1111/j.1467-9280.1994.tb00625.x
T2  - Psychological Science
JF  - Psychological Science
JO  - Psychol Sci
SP  -275
EP - 279
VL - 5
IS - 5
PB - SAGE Publications Inc
N2 - Traditional theories of cognitive development predict that children progress from intuitive to computational thinking, whereas fuzzy-trace theory makes the opposite prediction To evaluate these alternatives, framing problems were administered to preschoolers, second graders, and fifth graders Consistent with fuzzy-trace theory, results indicated (a) that younger children focused on quantitative differences between outcomes and did not exhibit framing effects (risk avoidance for gains, risk seeking for losses) and (b) that older children assimilated these quantitative differences and displayed framing effects
SN - 0956-7976
M3  - doi: 10.1111/j.1467-9280.1994.tb00625.x
UR  - https://doi-org.crai.referencistas.com/10.1111/j.1467-9280.1994.tb00625.x
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Foreign objects? Web content management systems, journalistic cultures and the ontology of software
AU  - Rodgers, Scott
Y1  - 2014/08/14
PY  - 2015
DA  - 2015/01/01
N1  - doi: 10.1177/1464884914545729
DO  - 10.1177/1464884914545729
T2  - Journalism
JF  - Journalism
JO  - Journalism
SP  -10
EP - 26
VL - 16
IS - 1
PB - SAGE Publications
N2 - Research on ‘digital’ journalism has focused largely on online news, with comparatively less interest in the longer-term implications of software and computational technologies. Drawing upon a 6-year study of the Toronto Star, this article provides an account of TOPS, an in-house web content management system which served as the backbone of thestar.com for 6 years. For some, TOPS was a successful software innovation, while for others, a strategic digital ‘property’. But for most journalists, it was slow, deficient in functionality, aesthetically unappealing and cumbersome. Although several organizational factors can explain TOPS’ obstinacy, I argue for particular attention to the complex ontology of software. Based on an outline of this ontology, I suggest software be taken seriously as an object of journalism, which implies acknowledging its partial autonomy from human use or authorization, accounting for its ability to mutate indefinitely and analysing its capacity to encourage forms of ‘computational thinking’.
SN - 1464-8849
M3  - doi: 10.1177/1464884914545729
UR  - https://doi-org.crai.referencistas.com/10.1177/1464884914545729
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Teaching programming and mathematics in practice: A case study from a Swedish primary school
AU  - Stigberg, Henrik
AU  - Stigberg, Susanne
Y1  - 2019/12/17
PY  - 2020
DA  - 2020/05/01
N1  - doi: 10.1177/1478210319894785
DO  - 10.1177/1478210319894785
T2  - Policy Futures in Education
JF  - Policy Futures in Education
SP  -483
EP - 496
VL - 18
IS - 4
PB - SAGE Publications
N2 - Programming and computational thinking have emerged as compulsory skills in elementary school education. In 2018, Sweden has integrated programming in mathematics education with the rationale that it fosters problem solving and logical thinking skills and motivates students to learn mathematics. We investigated how teachers introduce programming in mathematics education in a Swedish primary school using an explorative case study. We followed four mathematics teachers during the first semester in which programming was mandatory. They taught second-, sixth- and ninth-grade students. Our contributions are threefold: we provide an account of how programming is taught in mathematics education; we discuss how teachers reflect on the challenge of teaching programming in mathematics; and we report on students’ understanding of programming and their view on the relationship between programming and mathematics.
SN - 1478-2103
M3  - doi: 10.1177/1478210319894785
UR  - https://doi-org.crai.referencistas.com/10.1177/1478210319894785
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Sewing machines and weaving looms: a media archaeological encounter between fashion and film
AU  - Strauven, Wanda
Y1  - 2020/12/01
PY  - 2020
DA  - 2020/12/01
N1  - doi: 10.1177/1470412920964905
DO  - 10.1177/1470412920964905
T2  - Journal of Visual Culture
JF  - Journal of Visual Culture
SP  -362
EP - 377
VL - 19
IS - 3
PB - SAGE Publications
N2 - This article proposes thinking of media archaeology as an operating table upon which historical, material and technological interconnections between fashion and film are made. By exploring how early cinema and digital film can be coupled to textile as technology, more specifically through the mechanisms of the sewing machine and the Jacquard loom, it extends the historical span from the mid-1890s, with the invention of cinema as projection, to the early 1800s, when computational thinking was successfully implemented as weaving technique. Instead of focusing on film and fashion as means of visual representation, the author relies on the concept of inscription for a better understanding of both cinema (as recording of light and movement) and textile (with its various thread techniques of weaving, stitching, knitting, etc.).
SN - 1470-4129
M3  - doi: 10.1177/1470412920964905
UR  - https://doi-org.crai.referencistas.com/10.1177/1470412920964905
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Developing the Computer Programming Self-Efficacy Scale for Computer Literacy Education
AU  - Tsai, Meng-Jung
AU  - Wang, Ching-Yeh
AU  - Hsu, Po-Fen
Y1  - 2018/01/16
PY  - 2019
DA  - 2019/01/01
N1  - doi: 10.1177/0735633117746747
DO  - 10.1177/0735633117746747
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -1345
EP - 1360
VL - 56
IS - 8
PB - SAGE Publications Inc
N2 - Computer programming has been gradually emphasized in recent computer literacy education and regarded as a requirement for all middle school students in some countries. To understand young students’ perceptions about their own learning in computer programming, this study aimed to develop an instrument, Computer Programming Self-Efficacy Scale (CPSES), for all students above middle school levels. Based on Berland and Lee’s computational thinking framework, this study developed the CPSES items at a literacy level and finally the instrument included the five subscales: Logical Thinking, Algorithm, Debug, Control, and Cooperation. An exploratory factor analysis and reliability tests were conducted in this study. The reliability alpha was .96 for the overall scale, and ranged from .84 to .96 for the subscales. This study also confirmed the positive correlation between computer programming experience and computer programming self-efficacy. In addition, for low- and middle-experienced learners, significant gender differences were found in two subscales: Algorithm and Debug. The CPSES can be applied as an evaluation tool in computer education, robotics education, as well as integrated STEM or STEAM education in which computer programming was regarded as a part of computer literacy.
SN - 0735-6331
M3  - doi: 10.1177/0735633117746747
UR  - https://doi-org.crai.referencistas.com/10.1177/0735633117746747
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Revisiting Parquet Deformations from a computational perspective: A novel method for design and analysis
AU  - Yazar, Tuğrul
Y1  - 2017/10/13
PY  - 2017
DA  - 2017/12/01
N1  - doi: 10.1177/1478077117734660
DO  - 10.1177/1478077117734660
T2  - International Journal of Architectural Computing
JF  - International Journal of Architectural Computing
SP  -250
EP - 267
VL - 15
IS - 4
PB - SAGE Publications
N2 - Parquet Deformation is an architectural studio exercise introduced by William Huff in 1960s. It aims to improve students’ reasoning of spatiotemporal variation by utilizing sequential shapeshifting of patterns. This article examines the outcomes of this educational research from a perspective of design computing with a purpose to remark its pedagogical significance. A multilayered reading about the exercise will reveal its historical, theoretical, and artistic backgrounds. Then the common structural elements and different construction approaches are explained along with a novel design and analysis method. The proposed method embeds variations of two-dimensional pattern deformations on a third dimension. It enables various analyses such as the measurement of regularity and locating the attractor points. This study is expected to exemplify how computational thinking and new digital tools change the way designers would approach to such systematic compositions.
SN - 1478-0771
M3  - doi: 10.1177/1478077117734660
UR  - https://doi-org.crai.referencistas.com/10.1177/1478077117734660
Y2  - 2025/03/05
ER  - 

