@article{doi:10.1177/0888406421992376,
author = {Emily C. Bouck and Phil Sands and Holly Long and Aman Yadav},
title = {Preparing Special Education Preservice Teachers to Teach Computational Thinking and Computer Science in Mathematics},
journal = {Teacher Education and Special Education},
volume = {44},
number = {3},
pages = {221–238},
year = {2021a},
doi = {10.1177/0888406421992376},
URL = {https://doi-org.crai.referencistas.com/10.1177/0888406421992376},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0888406421992376},
abstract = {Increasingly in K–12 schools, students are gaining access to computational thinking (CT) and computer science (CS). This access, however, is not always extended to students with disabilities. One way to increase CT and CS (CT/CS) exposure for students with disabilities is through preparing special education teachers to do so. In this study, researchers explore exposing special education preservice teachers to the ideas of CT/CS in the context of a mathematics methods course for students with disabilities or those at risk of disability. Through analyzing lesson plans and reflections from 31 preservice special education teachers, the researchers learned that overall emerging promise exists with regard to the limited exposure of preservice special education teachers to CT/CS in mathematics. Specifically, preservice teachers demonstrated the ability to include CT/CS in math lesson plans and showed understanding of how CT/CS might enhance instruction with students with disabilities via reflections on these lessons. The researchers, however, also found a need for increased experiences and opportunities for preservice special education teachers with CT/CS to more positively impact access for students with disabilities.}
}

@article{doi:10.1177/07356331221098793,
author = {Shiau-Wei Chan and Chee-Kit Looi and Weng Kin Ho and Mi Song Kim},
title = {Tools and Approaches for Integrating Computational Thinking and Mathematics: A Scoping Review of Current Empirical Studies},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {8},
pages = {2036–2080},
year = {2023b},
doi = {10.1177/07356331221098793},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221098793},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221098793},
abstract = {The importance of computational thinking (CT) as a 21st-century skill for future generations has been a key consideration in the reforms of many national and regional educational systems. Much attention has been paid to integrating CT into the traditional subject classrooms. This paper describes a scoping review of learning tools for integrating CT and mathematics in current empirical studies published from 2015 to 2021. The review showed that most of the studies implemented CT-intensive Math-connected integration. Five major types of CT tools had been identified, i.e., digital tangibles, apps and games, programming languages, formative or summative assessments, and other technological tools. In many instances, the tools also provide functions of assessment of CT skills. The most assessed CT competencies were including algorithms and algorithmic thinking, abstraction, testing and debugging, loops, and sequences. Geometry and Measurement was the most assessed mathematics topic. Our scoping review is beneficial in the investigation of the literature on CT and mathematics education, as well as guides those who are interested in developing curriculum, programs, or assessments that involve the integration of CT and mathematics.}
}

@article{doi:10.1177/0735633119887187,
author = {Rotem Israel-Fishelson and Arnon Hershkovitz},
title = {Persistence in a Game-Based Learning Environment: The Case of Elementary School Students Learning Computational Thinking},
journal = {Journal of Educational Computing Research},
volume = {58},
number = {5},
pages = {891–918},
year = {2020c},
doi = {10.1177/0735633119887187},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633119887187},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633119887187},
abstract = {Persistence has proven to be a great challenge in online learning environments. Gaming and interactivity have been suggested as essential features in reducing dropout and increasing persistence in online learning. Yet in interactive game-based learning environments, persistence in moving forward in the game may come at the expense of investing in each of the game’s levels. That is, the motivation to complete the game may have a deleterious effect on learning at specific levels and hence on learning from the game in general. Therefore, we have chosen to focus on microlevel persistence (i.e., persistence during each component of the learning process). We study microlevel persistence in the context of acquiring computational thinking—the thought process of solving problems through abstraction—which is a key component of the new literacies needed for tomorrow’s citizens. In this study, we analyze data collected from an online, game-based learning environment (CodeMonkeyTM). The data document the activity of first to sixth graders (N = 2,040). Overall, we find that persistence is positively associated with difficulty and that the most determined learners were highly persistent across topics in achieving the best solution.}
}

@article{doi:10.1177/0735633119887187,
author = {Rotem Israel-Fishelson and Arnon Hershkovitz},
title = {Persistence in a Game-Based Learning Environment: The Case of Elementary School Students Learning Computational Thinking},
journal = {Journal of Educational Computing Research},
volume = {58},
number = {5},
pages = {891–918},
year = {2020d},
doi = {10.1177/0735633119887187},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633119887187},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633119887187},
abstract = {Persistence has proven to be a great challenge in online learning environments. Gaming and interactivity have been suggested as essential features in reducing dropout and increasing persistence in online learning. Yet in interactive game-based learning environments, persistence in moving forward in the game may come at the expense of investing in each of the game’s levels. That is, the motivation to complete the game may have a deleterious effect on learning at specific levels and hence on learning from the game in general. Therefore, we have chosen to focus on microlevel persistence (i.e., persistence during each component of the learning process). We study microlevel persistence in the context of acquiring computational thinking—the thought process of solving problems through abstraction—which is a key component of the new literacies needed for tomorrow’s citizens. In this study, we analyze data collected from an online, game-based learning environment (CodeMonkeyTM). The data document the activity of first to sixth graders (N = 2,040). Overall, we find that persistence is positively associated with difficulty and that the most determined learners were highly persistent across topics in achieving the best solution.}
}

@article{doi:10.1177/07356331221133822,
author = {Ana Melro and Georgie Tarling and Taro Fujita and Judith Kleine Staarman},
title = {What Else Can Be Learned When Coding? A Configurative Literature Review of Learning Opportunities Through Computational Thinking},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {4},
pages = {901–924},
year = {2023e},
doi = {10.1177/07356331221133822},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221133822},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221133822},
abstract = {Underpinning the teaching of coding with Computational Thinking has proved relevant for diverse learners, particularly given the increasing demand in upskilling for today’s labour market. While literature on computing education is vast, it remains unexplored how existing CT conceptualisations relate to the learning opportunities needed for a meaningful application of coding in non-Computer Scientists’ lives and careers. In order to identify and organise the learning opportunities in the literature about CT, we conducted a configurative literature review of studies published on Web of Science, between 2006 and 2021. Our sample gathers 34 papers and was analysed on NVivo to find key themes. We were able to organise framings of CT and related learning opportunities into three dimensions: functional, collaborative, and critical and creative. These dimensions make visible learning opportunities that range from individual cognitive development to interdisciplinary working with others, and to active participation in a technologically evolving society. By comparing and contrasting frameworks, we identify and explain different perspectives on skills. Furthermore, the three-dimensional model can guide pedagogical design and practice in coding courses.}
}

@article{doi:10.1177/07356331221133822,
author = {Mohd Kamal Othman and Syazni Jazlan and Fatin Afiqah Yamin and Shaziti Aman and Fitri Suraya Mohamad and Nurfarahani Norman Anuar and Abdulrazak Yahya Saleh and Ahmad Azaini Abdul Manaf},
title = {Mapping Computational Thinking Skills Through Digital Games Co-Creation           Activity Amongst Malaysian Sub-urban Children},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {2},
pages = {901–924},
year = {2023f},
doi = {10.1177/07356331221133822},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221133822},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221133822},
abstract = {Underpinning the teaching of coding with Computational Thinking has proved relevant for diverse learners, particularly given the increasing demand in upskilling for today’s labour market. While literature on computing education is vast, it remains unexplored how existing CT conceptualisations relate to the learning opportunities needed for a meaningful application of coding in non-Computer Scientists’ lives and careers. In order to identify and organise the learning opportunities in the literature about CT, we conducted a configurative literature review of studies published on Web of Science, between 2006 and 2021. Our sample gathers 34 papers and was analysed on NVivo to find key themes. We were able to organise framings of CT and related learning opportunities into three dimensions: functional, collaborative, and critical and creative. These dimensions make visible learning opportunities that range from individual cognitive development to interdisciplinary working with others, and to active participation in a technologically evolving society. By comparing and contrasting frameworks, we identify and explain different perspectives on skills. Furthermore, the three-dimensional model can guide pedagogical design and practice in coding courses.}
}

@article{doi:10.1177/07356331231210560,
author = {Yu-Sheng Su and Shuwen Wang and Xiaohong Liu},
title = {Using Epistemic Network Analysis to Explore Primary School Students’ Computational Thinking in Pair Programming Learning},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {2},
pages = {559–593},
year = {2024g},
doi = {10.1177/07356331231210560},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231210560},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231210560},
abstract = {Pair programming (PP) can help improve students’ computational thinking (CT), but the trajectory of CT skills and the differences between high-scoring and low-scoring students in PP are unknown and need further exploration. In this study, a total of 32 fifth graders worked on Scratch tasks in 16 pairs. The group discourse of three learning topics (comprising 9 projects) was collected. After the audio files were transcribed, 1,303 conversations were obtained. They were analyzed via Epistemic Network Analysis (ENA) Webkit, which can reveal the trajectory of students’ CT development via analyzing codes of discourse related to CT in PP. Three Scratch learning topics were assessed based on the Dr. Scratch platform to acquire the level of students’ CT and to determine the low- and high-scoring groups. Results indicated that CT concepts and CT practices were always closely related in PP and CT practices, and CT perspectives could be gradually and closely related after a long period of CT training. A significant difference between the two groups’ CT structures was found. The high-scoring group had more fragments of CT practice and connecting of CT perspectives, while the low-scoring group showed more fragments of CT concepts and expressing of CT perspectives. This research provides insights into cultivating primary school students’ CT using Scratch in the context of PP. The findings can provide suggestions for instructors to design instructional interventions to facilitate students’ CT skills via PP learning. Instructors can improve CT skills by guiding students to constantly ask questions, and specifying the role swap between driver and navigator in PP. Besides, instructors could give more consideration to the development of CT perspectives, and especially the ability to question.}
}

@article{doi:10.1177/07356331211035182,
author = {Lihui Sun and Linlin Hu and Danhua Zhou},
title = {Single or Combined? A Study on Programming to Promote Junior High School Students’ Computational Thinking Skills},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {2},
pages = {283–321},
year = {2022h},
doi = {10.1177/07356331211035182},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211035182},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211035182},
abstract = {In this work, we studied the influence of different programming approaches on the development of students’ computational thinking (CT) skills, the programming experience and gender differences in CT development were also discussed. A total of 158 junior high school students and one teacher participated in the study over 5 months. The sample students were divided into four experimental groups in four single or combined programming approaches (i.e., plugged-in, unplugged, unplugged first, and plugged-in first) and one control group without programming. Data sources included the results of four CT tests, as well as interviews with the teacher and surveys with 24 representative participants. The results showed that the four programming approaches can effectively improve students’ CT skills and can be retained after two months. Among them, the form of implementing unplugged activities before plugged-in can most effectively improve CT skills, and can better weaken the impact of previous programming experience. Finally, the qualitative analysis results provided insights into the process of programming and CT education. These findings will provide implications for the introduction of CT in junior high school, and help expand students’ participation in computing.}
}

@article{doi:10.1177/07356331211051043,
author = {Meng-Jung Tsai and Francis Pingfan Chien and Silvia Wen-Yu Lee and Chung-Yuan Hsu and Jyh-Chong Liang},
title = {Development and Validation of the Computational Thinking Test for Elementary School Students (CTT-ES): Correlate CT Competency With CT Disposition},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {5},
pages = {1110–1129},
year = {2022i},
doi = {10.1177/07356331211051043},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211051043},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211051043},
abstract = {This study aimed to develop the Computational Thinking Test for Elementary School Students (CTT-ES) to assess young children’s CT competencies in non-programming contexts and also examine the relationship between CT competencies and CT dispositions. A survey including a pool of CTT-ES candidate items and the Computational Thinking Scale (CTS) was administered to 631 elementary school students. Rasch model of the Item Response Theory and the discrimination analysis of the Classical Testing Theory were conducted for item analyses. Pearson’s correlation analyses and hierarchical multiple regression analyses were used to examine the relationships between CTT-ES and CTS scores. The results showed that the final CTT-ES including 16 items had a good fitness, discrimination, and reliability to evaluate elementary students’ domain-general CT competencies. The convergent validity of CTT-ES was confirmed by its significant correlations with the CTS scores. The significant regression model not only showed students’ CT competencies can be predicted by their CT dispositions but also supported The Developmental Model of CT. This study provided a valid and reliable tool for assessing young children’s CT abilities. It also furthered our understanding about the developmental orders of CT abilities and contributed to the theoretical construction of CT.}
}

@article{doi:10.1177/07356331211039961,
author = {Ting-Ting Wu and Jian-Ming Chen},
title = {Combining Webduino Programming With Situated Learning to Promote Computational Thinking, Motivation, and Satisfaction Among High School Students},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {3},
pages = {631–660},
year = {2022j},
doi = {10.1177/07356331211039961},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211039961},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211039961},
abstract = {Many countries have incorporated computational thinking (CT) and programming languages into their science and technology courses. Students can improve their CT ability by learning programming languages. Moreover, situated learning enables students to generate knowledge and master problem-solving skills through interaction with situations. This study incorporated Webduino learning and the situated learning strategy into a programming course and analyzed its impact on high school students’ CT ability, learning motivation, and course satisfaction. A quasi-experimental research method was adopted, wherein the experimental group was subjected to the situated learning strategy and the control group was subjected to a traditional teaching method. The study results revealed that integrating Webduino programming with situated learning could effectively improve five categories of CT skills; moreover, the activity models of situated learning enhanced the value and expectation dimensions of learning motivation. In addition, satisfaction with the course content and self-identity slightly improved. However, because teachers were required to elaborate on stories to promote learner engagement with life situations, the time available for programming was limited. Thus, no significant difference was observed in teaching satisfaction.}
}

