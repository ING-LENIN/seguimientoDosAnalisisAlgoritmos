TY  - JOUR
T1  - Analysis of Computational Thinking in Children’s Literature for K-6 Students: Literature as a Non-Programming Unplugged Resource
AU  - Ballard, Evan David
AU  - Haroldson, Rachelle
Y1  - 2021/03/24
PY  - 2022
DA  - 2022/01/01
N1  - doi: 10.1177/07356331211004048
DO  - 10.1177/07356331211004048
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -1487
EP - 1516
VL - 59
IS - 8
PB - SAGE Publications Inc
N2 - As schools and districts across the United States adopt computer science standards and curriculum for K-12 computer science education, they look to integrate the foundational concepts of computational thinking (CT) into existing core subjects of elementary-age students. Research has shown the effectiveness of teaching CT elements (abstraction, generalization, decomposition, algorithmic thinking, debugging) using non-programming, unplugged approaches. These approaches address common barriers teachers face with lack of knowledge, familiarity, or technology tools. Picture books and graphic novels present an unexplored non-programming, unplugged resource for teachers to integrate computational thinking into their CT or CT-integrated lessons. This analysis examines 27 picture books and graphic novels published between 2015 and 2020 targeted to K-6 students for representation of computational thinking elements. Using the computational thinking curriculum framework for K-6, we identify the grade-level competencies of the CT elements featured in the books compared to the books’ target age groups. We compare grade-level competencies to interest level to identify each CT element representation as “foundational,” “on-target,” or “advanced.” We conclude that literature offers teachers a non-programming unplugged resource to expose students to CT and enhance CT and CT-integrated lessons, while also personalizing learning based on CT readiness and interest level.
SN - 0735-6331
M3  - doi: 10.1177/07356331211004048
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331211004048
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Playing, tinkering, and problem solving: Understanding early computational thinking in libraries and museums
AU  - Campana, Kathleen
AU  - Elizabeth Mills, J.
Y1  - 2023/06/02
PY  - 2023
DA  - 2023/09/01
N1  - doi: 10.1177/1476718X231175464
DO  - 10.1177/1476718X231175464
T2  - Journal of Early Childhood Research
JF  - Journal of Early Childhood Research
SP  -369
EP - 383
VL - 21
IS - 3
PB - SAGE Publications
N2 - Computational thinking (CT) has emerged as an important method in the United States for helping children learn to solve complex problems and develop skills necessary for coding and other computer science-related endeavors. Research has revealed that CT can be encouraged with children as young as 3–4 years of age. While some preschools and schools are incorporating CT into their curriculum for young children, ages 0–8 years, it is important to understand how environments outside of schools are using CT with young children, particularly given that, in the United States, a large percent of young children, ages 0–5 years, are not in formal school settings. This study provides insight into this area through 20 interviews with educators in libraries and museums to understand how they incorporate CT into their work with young children, ages 0–8 years, and their families. The interviews reveal that library and museum educators are using a variety of developmentally-appropriate approaches, such as play, experimentation, and narrative, to design and offer a diverse array of engaging, hands-on CT activities that allow young children to practice CT in child-centered, meaningful ways.
SN - 1476-718X
M3  - doi: 10.1177/1476718X231175464
UR  - https://doi-org.crai.referencistas.com/10.1177/1476718X231175464
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Fostering Computational Thinking and Problem-Solving in Programming: Integrating Concept Maps Into Robot Block-Based Programming
AU  - Chen, Chih-Hung
AU  - Chung, Hsiang-Yu
Y1  - 2023/10/17
PY  - 2024
DA  - 2024/03/01
N1  - doi: 10.1177/07356331231205052
DO  - 10.1177/07356331231205052
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -406
EP - 427
VL - 62
IS - 1
PB - SAGE Publications Inc
N2 - Computational thinking (CT) has gained considerable attention and in-depth discussion over the last two decades. Although the significance of CT has been highlighted, it could be challenging for educators to teach CT. Fortunately, adopting robots in education has been evidenced to be of benefit to promoting students’ learning motivation, CT, and higher-order thinking skills. However, several significant factors affecting students’ programming performances in robot-assisted learning activities have been identified, such as cognitive needs and organization. In this study, a CMR-BBP (concept map robot block-based programming) approach was designed by integrating concept maps into robot block-based programming to enhance students’ programming learning. Moreover, a three-group experiment was carried out in an elementary school to evaluate their learning outcomes. The experimental results revealed that the CMR-BBP approach benefited the students’ perceptions of their computational thinking and problem solving in comparison with the R-BBP (robot block-based programming) and C-BBP (conventional block-based programming) approaches. Furthermore, regarding cognitive load, both the CMR-BBP and R-BBP approaches enhanced the students’ germane cognitive load, while the CMR-BBP approach effectively reduced their extrinsic cognitive load. This study could be a notable reference for designing other courses in conjunction with programming learning activities.
SN - 0735-6331
M3  - doi: 10.1177/07356331231205052
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331231205052
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Unleashing the Potential of Abstraction From Cloud of Computational Thinking: A Systematic Review of Literature
AU  - Ezeamuzie, Ndudi O.
AU  - Leung, Jessica S.C.
AU  - Ting, Fridolin S.T.
Y1  - 2021/12/09
PY  - 2022
DA  - 2022/07/01
N1  - doi: 10.1177/07356331211055379
DO  - 10.1177/07356331211055379
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -877
EP - 905
VL - 60
IS - 4
PB - SAGE Publications Inc
N2 - Although abstraction is widely understood to be one of the primary components of computational thinking, the roots of abstraction may be traced back to different fields. Hence, the meaning of abstraction in the context of computational thinking is often confounded, as researchers interpret abstraction through diverse lenses. To disentangle these conceptual threads and gain insight into the operationalisation of abstraction, a systematic review of 96 empirical studies was undertaken. Analysis revealed that identifying features of entities, extracting relevant features, discovering patterns, creating rules and assembling the parts together were the core actions of abstraction. With the primary aim of simplifying practical procedures, abstraction was operationalised as the sophistication of a program, the matching of patterns, the creation of alternative representations, the transfer of solutions, the measurement of a learner’s activity and reading program codes. There is an obvious need for researchers to align the conceptual meanings they have established of abstraction with the practical facts of operationalisation. The need to empirically validate emerging models and the implications for future research are discussed.
SN - 0735-6331
M3  - doi: 10.1177/07356331211055379
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331211055379
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Integrating computational thinking into primary mathematics: A case study of fraction lessons with Scratch programming activities
AU  - Fang, Xiaoxuan
AU  - Ng, Davy Tsz Kit
AU  - Tam, Wing Tung
AU  - Yuen, Manwai
Y1  - 2023/06/01
PY  - 2023
DA  - 2023/06/01
N1  - doi: 10.1177/27527263231181963
DO  - 10.1177/27527263231181963
T2  - Asian Journal for Mathematics Education
JF  - Asian Journal for Mathematics Education
SP  -1487
EP - 239
VL - 2
IS - 2
PB - SAGE Publications Inc
N2 - As schools and districts across the United States adopt computer science standards and curriculum for K-12 computer science education, they look to integrate the foundational concepts of computational thinking (CT) into existing core subjects of elementary-age students. Research has shown the effectiveness of teaching CT elements (abstraction, generalization, decomposition, algorithmic thinking, debugging) using non-programming, unplugged approaches. These approaches address common barriers teachers face with lack of knowledge, familiarity, or technology tools. Picture books and graphic novels present an unexplored non-programming, unplugged resource for teachers to integrate computational thinking into their CT or CT-integrated lessons. This analysis examines 27 picture books and graphic novels published between 2015 and 2020 targeted to K-6 students for representation of computational thinking elements. Using the computational thinking curriculum framework for K-6, we identify the grade-level competencies of the CT elements featured in the books compared to the books’ target age groups. We compare grade-level competencies to interest level to identify each CT element representation as “foundational,” “on-target,” or “advanced.” We conclude that literature offers teachers a non-programming unplugged resource to expose students to CT and enhance CT and CT-integrated lessons, while also personalizing learning based on CT readiness and interest level.
SN - 2752-7263
M3  - doi: 10.1177/27527263231181963
UR  - https://doi-org.crai.referencistas.com/10.1177/27527263231181963
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Paper-and-Pencil Programming Strategy toward Computational Thinking for Non-Majors: Design Your Solution
AU  - Kim, Byeongsu
AU  - Kim, Taehun
AU  - Kim, Jonghoon
Y1  - 2013/12/01
PY  - 2013
DA  - 2013/12/01
N1  - doi: 10.2190/EC.49.4.b
DO  - 10.2190/EC.49.4.b
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -437
EP - 459
VL - 49
IS - 4
PB - SAGE Publications Inc
N2 - The paper-and-pencil programming strategy (PPS) is a way of representing an idea logically by any representation that can be created using paper and pencil. It was developed for non-computer majors to improve their understanding and use of computational thinking and increase interest in learning computer science. A total of 110 non-majors in their sophomore year were assigned to either a Logo or a PPS course with attendance being 2 hours per week for 15 weeks. To measure the effectiveness of PPS, the Group Assessment of Logical Thinking and a self-assessment survey pre- and post-test were used. Findings indicated that PPS not only improved students’ overall logical thinking as much as did Logo programming learning, but also increased scores on one more subscale of logical thinking than did the Logo course. In addition, PPS significantly helped students understand the concept of computational thinking and increased their interest in learning computer science.
SN - 0735-6331
M3  - doi: 10.2190/EC.49.4.b
UR  - https://doi-org.crai.referencistas.com/10.2190/EC.49.4.b
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Assessing Computational Thinking, Motivation, and Grit of Undergraduate Students Using Educational Robots
AU  - Pellas, Nikolaos
Y1  - 2023/11/10
PY  - 2024
DA  - 2024/04/01
N1  - doi: 10.1177/07356331231210946
DO  - 10.1177/07356331231210946
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -620
EP - 644
VL - 62
IS - 2
PB - SAGE Publications Inc
N2 - Educational technologists and practitioners have made substantial strides in developing affordable digital and tangible resources to support both formal and informal computer science instruction. However, there is a lack of research on practice-based assignments, such as Internet of Things (IoT) projects, that allow undergraduate students to design and demonstrate educational robots using digital or physical assistance, especially when it comes to computational thinking (CT) and programming skills development in association with their psycho-emotional experience. This study compares the impact of Scratch and LEGO® WeDo robotic kits on students’ CT and programming skills development. A quasi-experimental approach was conducted, involving two hundred forty-six participants (n = 246), who were equally divided between Scratch and LEGO® WeDo groups. Results indicate that the LEGO® WeDo group showed greater improvement in CT and programming skills development, while designing and presenting IoT projects. Nevertheless, no significant association between motivation, grit, and CT skills was observed. The findings highlight the potential of tangible robotics in facilitating students’ hands-on learning and enhancing motivation to foster CT and programming skills. This study provides a wide range of implications for instructional designers on how to use tangible robotics to support hands-on IoT projects in computer science courses.
SN - 0735-6331
M3  - doi: 10.1177/07356331231210946
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331231210946
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Capturing computational thinking in public libraries: An examination of assessment strategies, audience, and mindset
AU  - Subramaniam, Mega
AU  - Koren, Nitzan
AU  - Morehouse, Shandra
AU  - Weintrop, David
Y1  - 2022/03/16
PY  - 2023
DA  - 2023/06/01
N1  - doi: 10.1177/09610006221084126
DO  - 10.1177/09610006221084126
T2  - Journal of Librarianship and Information Science
JF  - Journal of Librarianship and Information Science
SP  -358
EP - 370
VL - 55
IS - 2
PB - SAGE Publications Ltd
N2 - This study examines the current state of assessment of computational thinking (CT) programming in public libraries in the United States. In particular, this study identifies the assessment tools and strategies that public library staff use to evaluate the success of CT youth programming, as well as how they share these assessment results, what they share, and with whom. This work also examines the perceptions of library staff on assessment of CT learning in libraries. Through our work, we highlight the need for a change of mindset in the perception of library staff toward assessment of CT learning in libraries. We also demonstrate the need for suitable assessment strategies to measure learning in CT programming in libraries beyond attendance and retention, that communicate to library staff on how they can revise their programs and to share their program impact with library stakeholders who make decisions on budget and resource allocations.
SN - 0961-0006
M3  - doi: 10.1177/09610006221084126
UR  - https://doi-org.crai.referencistas.com/10.1177/09610006221084126
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Learning Culture and Computational Thinking in a Spanish Course: A Development Model
AU  - Zha, Shenghua
AU  - Morrow, Debra A.L.
AU  - Curtis, Jennifer
AU  - Mitchell, Shane
Y1  - 2020/12/03
PY  - 2021
DA  - 2021/09/01
N1  - doi: 10.1177/0735633120978530
DO  - 10.1177/0735633120978530
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -844
EP - 869
VL - 59
IS - 5
PB - SAGE Publications Inc
N2 - Computer science and computational thinking (CT) education in K-12 schools have been escalating in recent years. A couple of CT instructional models have been proposed to depict the roles of CT in K-16 education. Yet, neither of them discussed CT infusion into a subject course. In this article, we proposed a CT-integration model called TPC2T. In this model, we suggested considering CT as a second subject and using an appropriate technological pedagogical approach to make students’ learning of two subjects meaningful and engaging. We implemented this model in a CT-integrated lesson in two sections of a high-school Spanish course. Students worked in small groups and coded three small and one comprehensive digital Spanish-culture stories in Scratch. Results showed that students taking the CT-integrated lesson had the same degree of improvement in their Spanish culture knowledge as their peers who did not take the CT-integrated lesson. Besides, students taking the CT-integrated lesson had a significant improvement in their CT knowledge. At the same time, their CT self-efficacy outperformed those who did not take the CT-integrated lesson. We discussed the results and offered suggestions for researchers and educators at the end of the article.
SN - 0735-6331
M3  - doi: 10.1177/0735633120978530
UR  - https://doi-org.crai.referencistas.com/10.1177/0735633120978530
Y2  - 2025/03/05
ER  - 

TY  - JOUR
T1  - Effect of Different Flow Design Approaches on Undergraduates’ Computational Thinking During Pair Programming
AU  - Zhou, Ruijie
AU  - Xie, Chong
AU  - He, Xiuling
AU  - Li, Yangyang
AU  - Fan, Qiong
AU  - Yu, Ying
AU  - Yan, Zhonghua
Y1  - 2024/07/26
PY  - 2024
DA  - 2024/12/01
N1  - doi: 10.1177/07356331241268474
DO  - 10.1177/07356331241268474
T2  - Journal of Educational Computing Research
JF  - Journal of Educational Computing Research
SP  -1865
EP - 1895
VL - 62
IS - 7
PB - SAGE Publications Inc
N2 - Computational thinking (CT), an essential competency for comprehending and addressing intricate issues in the digital world, has been incorporated into curriculum planning as a goal for programming education. This study introduced flow design into programming curricula to investigate its impact on undergraduates ’CT skills during pair work. Two types of flow design approaches, construct-by-self flow design (CBS-FD) and construct-on-scaffold flow design (COS-FD), were proposed to determine which approach better enhances students’ CT skills. Seventy-six first-year undergraduates participated, including thirty in the CBS group and thirty-six in the COS group. Evaluations made from the results and processes of programming tasks were employed to describe computational performance and computational practices, respectively. Data gathered from CT skill surveys were thoroughly analyzed to gain a deeper understanding of computational perspectives. Our findings highlighted that COS-FD significantly improved participants’ computational performance compared with CBS-FD. The COS groups fostered an engaging, sharing atmosphere, while CBS groups spent more energy on negotiating the manipulation of flow design. Moreover, both COS-FD and CBS-FD proved beneficial in enhancing participants’ computational perspectives, with the COS groups better improving their algorithm thinking. The study presents valuable perspectives on the design and implementation of collaborative programming activities within curriculum education.
SN - 0735-6331
M3  - doi: 10.1177/07356331241268474
UR  - https://doi-org.crai.referencistas.com/10.1177/07356331241268474
Y2  - 2025/03/05
ER  - 

